.header {
  background-color: $color-grey-dark-1;
  grid-column: full-start / col-end 6; // right from sidebar till realtors part. it occupies 7 columns (realtors occupies 3)

  background-image: linear-gradient(rgba($color-secondary, .93), rgba($color-secondary, .93)), url(../img/hero.jpeg);
  background-size: cover;
  background-position: center;
  padding: 4rem 8rem 8rem 8rem;

  display: grid;
  grid-template-rows: 1fr min-content minmax(6rem, min-content) 1fr;
  grid-template-columns: minmax(min-content, max-content); // we use minmax function to make it responsible.
  // using only min-content or max-content is not enough

  grid-row-gap: 1.5rem;
  justify-content: center;

  @media only screen and (max-width: $breakpoint-medium) {
    grid-column: 1 / -1;
  }

  @media only screen and (max-width: $breakpoint-small) {
    padding: 5rem;
  }

  &__logo {
    height: 3rem;
    justify-self: center;
  }

  &__btn {
    // without this two props button tries to fill entire cell. if we align button inside cell (container)
    // on this manner - it will become small (as we want)
    align-self: start;
    justify-self: start;
  }

  &__seenon-text { // here we try to make our div with text "Seen on" as a grid system.
    // this text will be in its own cell, and lines after and before it will be made from pseudo elements (and also been placed in gird cells)
    display: grid;
    grid-template-columns: 1fr max-content 1fr;
    grid-column-gap: 1.5rem;
    align-items: center;

    font-size: 1.6rem;
    color: $color-grey-light-2;

    &::before, &::after { // we do our lines using before and after pseudo elements
      content: "";
      height: 1px;
      display: block;
      background-color: currentColor; // it gets color from parent, from "seenon-text", and color will be "$color-grey-light-2"
    }
  }

  &__seenon-logos {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-gap: 3rem;
    justify-items: center;
    align-items: center;

    img {
      max-height: 2.5rem; // we specify max-height to make it responsible
      max-width: 100%;

      filter: brightness(65%); // make our image a little bit darker
      transition: filter .2s;

      &:hover {
        filter: brightness(90%); // make our image a little bit lighter on hover
      }
    }
  }
}